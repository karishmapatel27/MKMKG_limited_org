{"version":3,"sources":["components/Home.jsx","components/ReturnToHome.jsx","components/ImageList.jsx","components/TextInput.jsx","components/BigImage.jsx","components/ReturnToImageList.jsx","components/MemeBuilder.jsx","components/Canvas.jsx","components/PrintScreen.jsx","components/YourMeme.jsx","components/App.jsx","index.js"],"names":["Home","className","Header","size","src","alt","class","Button","color","href","id","Content","visible","hidden","ReturnToHome","ImageList","Grid","columns","doubling","stackable","padded","Column","Image","TextInput","props","handleURL","history","push","match","params","image","state","text","handleChange","evt","setState","target","value","type","placeholder","this","onChange","onClick","Component","BigImage","MemeImage","console","log","width","height","ReturnToImageList","Icon","name","MemeBuilder","Canvas","ctx","refs","canvas","getContext","img","onload","drawImage","font","strokeStyle","lineWidth","strokeText","toUpperCase","fillStyle","fillText","ref","React","PrintScreen","window","print","YourMeme","App","exact","path","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9ae8953b.chunk.js","sourcesContent":["import React from 'react'\nimport { Button } from 'semantic-ui-react'\nimport { Header } from 'semantic-ui-react'\n\nfunction Home() {\n  return (\n    <>\n      <div className='header'>\n        <Header size='huge'>Meme Generator</Header>\n      </div>\n      <h2 className=\"home_subheading\">REACT to our memes</h2>\n      <div className=\"landing_image\">\n        <img src='./meme.jpg' alt=\"meme\"></img>\n      </div>\n      <div class='home-button'>\n        <Button color='olive' size='large' href='/#/imageList' id=\"mainButton\">\n          <Button.Content visible >Start</Button.Content>\n          <Button.Content hidden>MEME Time!!!</Button.Content>\n        </Button>\n      </div>\n    </>\n  )\n}\n\nexport default Home\n\n\n","import React from \"react\"\n\nimport { Button } from \"semantic-ui-react\"\n\nfunction ReturnToHome() {\n  return (\n    <>\n      <Button href=\"/\" id=\"returnToHomeBtn\" color='olive' size='large'>\n        Home\n      </Button>\n    </>\n  )\n}\n\nexport default ReturnToHome\n\n//Button to return to Home.jsx\n","import React from 'react'\n\nimport { Grid, Image, Header } from 'semantic-ui-react'\n\nimport ReturnToHome from './ReturnToHome'\n\nfunction ImageList() {\n\n  return (\n    <>\n\n      <div className='header'>\n        <Header size='huge'>Meme Generator</Header>\n      </div>\n\n      <h1 className=\"home_subheading\">Choose your victim:</h1>\n\n      <div class=\"grid_img\">\n\n\n        <Grid columns={3} doubling stackable padded>\n          <Grid.Column>\n            <Image src='/images/don.png' href='#/memeBuilder/don' />\n          </Grid.Column>\n          <Grid.Column>\n            <Image src='/images/karel.png' href='#/memeBuilder/karel' />\n          </Grid.Column>\n          <Grid.Column>\n            <Image src='/images/daryl.png' href='#/memeBuilder/daryl' />\n          </Grid.Column>\n          <Grid.Column>\n            <Image src='/images/emily.png' href='#/memeBuilder/emily' />\n          </Grid.Column>\n          <Grid.Column>\n            <Image src='/images/prue.png' href='#/memeBuilder/prue' />\n          </Grid.Column>\n          <Grid.Column>\n            <Image src='/images/nimesh.png' href='#/memeBuilder/nimesh' />\n          </Grid.Column>\n        </Grid>\n\n      </div>\n      <ReturnToHome />\n\n    </>\n  )\n}\n\nexport default ImageList\n\n\n","import React, { Component } from 'react'\n\nclass TextInput extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      text: ''\n    }\n  }\n\n  handleURL = () => {\n    this.props.history.push(`/yourMeme/${this.props.match.params.image}/${this.state.text}`)\n  }\n\n  handleChange = (evt) => {\n    this.setState({ text: evt.target.value })\n  }\n\n\n  render() {\n    return (\n      <>\n        <form id='form'>\n          <input id='input' type=\"text\" placeholder=\"Write your meme text...\" value={this.state.text} onChange={this.handleChange} />\n          <input id='button' type=\"submit\" onClick={this.handleURL} />\n        </form>\n      </>\n    )\n  }\n}\n\nexport default TextInput\n\n","import React from 'react'\n\nimport { Image } from 'semantic-ui-react'\n\nfunction BigImage(props) {\n\n  const MemeImage = props.match.params.image\n  console.log(props.match.params)\n\n  return (\n    <>\n      <Image className=\"big_img\" src={`/images/${MemeImage}.png`} width=\"600\" height=\"400\" />\n    </>\n  )\n}\n\nexport default BigImage\n\n//Big view of selected image for text to go on top of\n","import React from 'react'\n\nimport { Button, Icon } from 'semantic-ui-react'\n\nfunction ReturnToImageList() {\n  return (\n    <>\n\n      <Button href='/#/imageList' color='olive' size='large' id=\"returnToImageBtn\" >\n        <Button.Content visible>Return To Images</Button.Content>\n        <Button.Content hidden>\n          <Icon name='arrow left' />\n        </Button.Content>\n      </Button>\n    </>\n  )\n}\n\nexport default ReturnToImageList\n\n//Button to return to ImageList.jsx\n","import React from 'react'\n\nimport TextInput from './TextInput'\nimport BigImage from './BigImage'\nimport ReturnToImageList from './ReturnToImageList'\n\nfunction MemeBuilder(props) {\n  return (\n    <>\n      <TextInput {...props} />\n      <BigImage {...props} />\n      <ReturnToImageList />\n    </>\n  )\n}\n\nexport default MemeBuilder","import React from \"react\"\n\nclass Canvas extends React.Component {\n  constructor(props) {\n    super(props)\n  }\n\n  componentDidMount() {\n    const canvas = this.refs.canvas\n    const ctx = canvas.getContext(\"2d\")\n    const img = this.refs.image\n\n    img.onload = () => {\n      ctx.drawImage(img, 0, 0)\n      ctx.font = \"50px Anton\"\n      ctx.strokeStyle = 'black';\n      ctx.lineWidth = 8;\n      ctx.strokeText(this.props.match.params.text.toUpperCase(), 320, 75)\n      ctx.fillStyle = 'white'\n      ctx.fillText(this.props.match.params.text.toUpperCase(), 320, 75)\n    }\n  }\n  render() {\n    return (\n      <div className=\"canvas_img\">\n        <canvas ref=\"canvas\" width=\"1200\" height=\"620\" className=\"canvas\" />\n        <img ref=\"image\" alt=\"meme victim\" src={`/images/${this.props.match.params.image}.png`} className=\"hidden final_img\" width=\"600\" height=\"400\" />\n      </div>\n    )\n  }\n}\nexport default Canvas","import React from 'react'\nimport { Button } from 'semantic-ui-react'\n\nfunction PrintScreen() {\n  return (\n    <>\n      <div>\n        <Button id=\"printScreen\" onClick={() => window.print()}>\n          Print\n        </Button>\n      </div>\n    </>\n  )\n}\n\nexport default PrintScreen\n\n\n","import React from 'react'\nimport { Header } from 'semantic-ui-react'\n\nimport Canvas from './Canvas'\nimport PrintScreen from './PrintScreen'\nimport ReturnToHome from './ReturnToHome'\n\nfunction YourMeme(props) {\n  return (\n    <>\n      <div className='header'>\n        <Header size='small' id=\"enjoy\">Enjoy Your Meme!</Header>\n      </div>\n      <Canvas {...props} />\n      <div className=\"print_return_btn\">\n        <ReturnToHome />\n        <PrintScreen />\n      </div>\n    </>\n  )\n}\n\nexport default YourMeme\n\n//Display meme; image with text overlay, nice message\n","import React from \"react\"\nimport { Route } from \"react-router-dom\"\n\nimport Home from \"./Home\"\nimport ImageList from \"./ImageList\"\nimport MemeBuilder from \"./MemeBuilder\"\nimport YourMeme from \"./YourMeme\"\n\nfunction App() {\n  return (\n    <>\n      <div className=\"App\">\n        <Route exact path='/' component={Home} />\n        <Route path='/imageList' component={ImageList} />\n        <Route path='/memeBuilder/:image' component={MemeBuilder} />\n        <Route path='/yourMeme/:image/:text' component={YourMeme} />\n      </div>\n    </>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { HashRouter as Router } from 'react-router-dom'\nimport 'semantic-ui-css/semantic.min.css'\n\nimport App from './components/App'\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById('root')\n)"],"sourceRoot":""}